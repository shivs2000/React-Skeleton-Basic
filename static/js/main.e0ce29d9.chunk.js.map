{"version":3,"sources":["skeletons/SkeletonElement.js","skeletons/SkeletonArticle.js","components/Articles.js","skeletons/SkeletonProfile.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["SkeletonElement","type","classes","className","SkeletonArticle","themeClass","theme","Articles","props","useState","articles","Setarticles","useEffect","setTimeout","a","fetch","res","json","data","map","title","body","id","n","SkeletonProfile","User","profile","Setprofile","name","email","href","website","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAYeA,MATf,YAAkC,IAARC,EAAO,EAAPA,KAChBC,EAAQ,YAAD,OAAaD,GAC1B,OACI,qBAAKE,UAAWD,KCYTE,MAff,YAAmC,IACzBC,EADwB,EAARC,OACI,QAE1B,OACI,qBAAKH,UAAS,2BAAsBE,GAApC,SACI,sBAAKF,UAAU,mBAAf,UACE,cAAC,EAAD,CAAiBF,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,eCoCrBM,MA5Cf,SAAkBC,GAId,MAA6BC,mBAAS,MAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KAaI,OAVJC,qBAAU,WACTC,WAAU,sBAAC,8BAAAC,EAAA,sEACOC,MAAM,8CADb,cACHC,EADG,gBAEQA,EAAIC,OAFZ,OAEHC,EAFG,OAGTP,EAAYO,GAHH,2CAMT,OAED,IAEE,sBAAKf,UAAU,UAAf,UACI,0CAKCO,GAAYA,EAASS,KAAI,SAACL,GAAD,OACtB,gCACI,6BACKA,EAAEM,QAEP,4BACKN,EAAEO,SALDP,EAAEQ,QAWdZ,GAAY,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGS,KAAI,SAACI,GAAD,OAE1B,cAAC,EAAD,GAAsBA,UCpBvBC,MAnBf,YAAmC,IACzBnB,EADwB,EAARC,OACI,QAC1B,OACI,qBAAKH,UAAS,2BAAsBE,GAApC,SACI,sBAAKF,UAAU,mBAAf,UACG,8BACA,cAAC,EAAD,CAAiBF,KAAK,aAEtB,gCACC,cAAC,EAAD,CAAiBA,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,kBCyBvBwB,MApCf,SAAcjB,GACV,MAA2BC,mBAAS,MAApC,mBAAOiB,EAAP,KAAeC,EAAf,KAcA,OAXAf,qBAAU,WAEVC,WAAU,sBAAC,8BAAAC,EAAA,sEACKC,MAAM,gDADX,cACLC,EADK,gBAEOA,EAAIC,OAFX,OAELC,EAFK,OAGXS,EAAWT,GAHA,2CAMT,OAEA,IAEE,sBAAKf,UAAU,OAAf,UACI,8CAIEuB,GACC,gCACI,6BAAKA,EAAQE,OACb,4BAAIF,EAAQG,QACZ,mBAAGC,KAAMJ,EAAQK,QAAjB,SAA2BL,EAAQK,cAMxCL,GAAY,cAAC,EAAD,QClBXM,MAZf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,iCAAQ,kDACR,sBAAKA,UAAU,UAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,WCES8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e0ce29d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport  './skeleton.css';\r\n\r\nfunction SkeletonElement({type}) {\r\n    const classes=`skeleton ${type}`;\r\n    return (\r\n        <div className={classes}>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkeletonElement;","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\nimport './skeleton.css'\r\nfunction SkeletonArticle({theme}) {\r\n    const themeClass=theme || 'light';\r\n\r\n    return (\r\n        <div className={`skeleton-wrapper ${themeClass}`}>\r\n            <div className=\"skeleton-article\"> \r\n              <SkeletonElement type=\"title\" />\r\n              <SkeletonElement type=\"text\" />\r\n              <SkeletonElement type=\"text\" />\r\n              <SkeletonElement type=\"text\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkeletonArticle;","import React, { useEffect, useState } from 'react';\r\n\r\nimport SkeletonArticle from '../skeletons/SkeletonArticle';\r\n\r\nfunction Articles(props) {\r\n\r\n\r\n\r\n    const [articles,Setarticles]=useState(null);\r\n\r\n\r\n    useEffect(()=>{\r\n     setTimeout(async ()=>{\r\n       const res=await fetch('https://jsonplaceholder.typicode.com/posts');\r\n       const data=await res.json();\r\n       Setarticles(data);\r\n\r\n\r\n     },3000)\r\n\r\n    },[])\r\n        return (\r\n        <div className=\"article\">\r\n            <h2>\r\n                Articles\r\n            </h2>\r\n\r\n            \r\n            {articles && articles.map((a)=>(\r\n                <div key={a.id}>\r\n                    <h3>\r\n                        {a.title}\r\n                    </h3>\r\n                    <p>\r\n                        {a.body}\r\n                    </p>\r\n                </div>\r\n\r\n\r\n            ))}\r\n            {!articles && [1,2,3,4,5].map((n)=>(\r\n\r\n                <SkeletonArticle key={n} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Articles;","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\n\r\nfunction SkeletonProfile({theme}) {\r\n    const themeClass=theme || 'light';\r\n    return (\r\n        <div className={`skeleton-wrapper ${themeClass}`}>\r\n            <div className=\"skeleton-profile\">\r\n               <div>\r\n               <SkeletonElement type=\"avatar\" />\r\n               </div>\r\n               <div>\r\n                <SkeletonElement type=\"title\" />\r\n                <SkeletonElement type=\"text\" />\r\n                <SkeletonElement type=\"text\" />\r\n               </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkeletonProfile;","import React,{useState,useEffect} from 'react';\r\nimport SkeletonProfile from '../skeletons/SkeletonProfile';\r\n\r\nfunction User(props) {\r\n    const [profile,Setprofile]=useState(null);\r\n\r\n\r\n    useEffect(()=>{\r\n    \r\n    setTimeout(async ()=>{\r\n    const res=await fetch('https://jsonplaceholder.typicode.com/users/1');\r\n    const data= await res.json();\r\n    Setprofile(data);\r\n\r\n\r\n    },3000)\r\n\r\n    },[])\r\n    return (\r\n        <div className=\"user\">\r\n            <h2>\r\n             User Details\r\n            </h2>\r\n\r\n            { profile && (\r\n               <div>\r\n                   <h3>{profile.name}</h3>\r\n                   <p>{profile.email}</p>\r\n                   <a href={profile.website}>{profile.website}</a>\r\n                </div>\r\n\r\n\r\n            )}\r\n\r\n            {!profile && (<SkeletonProfile  />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import Articles from \"./components/Articles\";\nimport User from \"./components/User\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <header><h1>React Skeleton</h1></header>\n      <div className=\"content\">\n      <Articles/>\n      <User/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}